@model TaskTrackingSystem.Models.ProjectModel

@using TaskTrackingSystem.CustomAuthorizeAttribute;
@{ControllerAccessAttribute.FillFromPage(Model.ProjectTypeId);}

@{
    ViewBag.Title = "Edit";
}

<h2>Редактирование</h2>

<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#panel1">Основные поля</a></li>
    <li><a data-toggle="tab" href="#panel2">Пути к файлам/папкам</a></li>
</ul>

<div class="tab-content">
    <div id="panel1" class="tab-pane fade in active">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ProjectTypeId)

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id, new { @id = "projectId" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.AccountLogin, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.AccountLogin, Model.DropDownListAccounts, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AccountLogin, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DateStart, "{0:yyyy-MM-dd}", htmlAttributes: new { @type = "date", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DateEnd, "{0:yyyy-MM-dd}", htmlAttributes: new { @type = "date", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.StatusId, Model.DropDownListStatuses, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContractNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContractNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContractNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.Hidden("CompanyId", Model.CompanyId)

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input id="CompaniesInput" type="text" list="CompaniesDL" autocomplete="off" class="input-validation-error form-control text-box single-line">
                        <datalist id="CompaniesDL">
                            @foreach (var company in Model.Companies)
                            {
                                <option id="@company.Id" value="@company.Name" />
                            }
                        </datalist>
                        @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (ControllerAccessAttribute.GetAccessPage("Project", "CostField"))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Сохранить" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div id="panel2" class="tab-pane fade">
        <div class="row">
            <div class="col-1"></div>
            <label class="control-label text-center col-4">Описание</label>
            <div class="col-1"></div>
            <label class="control-label text-center col-4">Путь к файлу/папке</label>

        </div>

        @foreach (var item in Model.FilePaths)
        {
            <div class="row">
                <div class="col-1"></div>
                <input class="form-control text-box single-line col-4" onfocusout="Update(this)" value="@item.Description" description />
                <div class="col-1"></div>
                <input class="form-control text-box single-line col-4" onfocusout="Update(this)" value="@item.Path" path />
                <div class="col-1">
                    <button deleteButton id="@item.Id" onclick="ButtonRemove(this)" class="btn btn-danger">-</button>
                </div>
                <div class="col-6"></div>
                <div class="col-4">
                    <a openpath href="myproto://@item.Path">Открыть</a>
                </div>
            </div>
        }

        <div id="AddRow" class="row">
            <div class="col-10"></div>
            <div class="col-1">
                <button id="AddButton" class="btn btn-success" onclick="ButtonAdd(this)">+</button>
            </div>
        </div>

        <div style="display:none;" id="RowTemplate" class="row">
            <div class="col-1"></div>
            <input onfocusout="Update(this)" description class="form-control text-box single-line col-4" />
            <div class="col-1"></div>
            <input onfocusout="Update(this)" path class="form-control text-box single-line col-4" />
            <div class="col-1">
                <button deleteButton onclick="ButtonRemove(this)" class="btn btn-danger">-</button>
            </div>
            <div class="col-6"></div>
            <div class="col-4">
                <a openpath href="">Открыть</a>
            </div>
        </div>
    </div>
</div>





<div>
    @Html.ActionLink("Вернуться к списку", "Details", "ProjectType", new { id = Model.ProjectTypeId }, new { })
</div>


<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/MyScripts/ProjectEdit/TablePathToFile.js"></script>
<script src="~/Scripts/MyScripts/Calendar/URLHelper.js"></script>

<script type="text/javascript">

    $(document).ready(function () {

        //Евент : записываем в скрытое поле CompanyId значение выбранное в CompaniesInput списке
        $("#CompaniesInput").focusout(function () {
            g = $('#CompaniesInput').val();
            id = $('#CompaniesDL').find('option[value="' + g + '"]').attr('id');
            $("#CompanyId").val(id);
        });

        //Заполняем предвыбранное значение в CompaniesInput списке
        $('#CompaniesInput').val($('#CompaniesDL').find('option[id="' + $("#CompanyId").val() + '"]').attr('value'));
    });
</script>