@model TaskTrackingSystem.Models.TaskModel
@using TaskTrackingSystem.CustomAuthorizeAttribute;

@{
    ViewBag.Title = "Create";
}

<div class="alertHeader"></div>

<div class="item-header">
    <h2>Создание новой задачи для проекта : @ViewData["projectName"]</h2>
</div>

<div id="main-content" class="main-content">
    <div class="active-area">
        <div class="column full">
            <div class="content">
                <div class="command-bar">
                    <div class="ops-cont">
                        <div class="ops-menus">
                            <ul id="opsbar-edit" class="first ops">
                                <li class="last">
                                    <a class="issueaction-edit-issue button edit first last" href='~/Project/Index/@ViewData["projectId"]'>
                                        <span>Назад</span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

                <hr />

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.Hidden("projectId", Model.ProjectId)

                    <div>

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="field-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            <div>
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field-group">
                            @Html.LabelFor(model => model.StatusId, htmlAttributes: new { })
                            @Html.DropDownListFor(model => model.StatusId, Model.DropDownListStatuses, new { @class = "form-control" })
                        </div>

                        <div class="field-group">
                            @Html.LabelFor(model => model.AccountLogin, htmlAttributes: new { })
                            @Html.DropDownListFor(model => model.AccountLogin, Model.DropDownListAccounts, new { @class = "form-control" })
                            <div>
                                @Html.ValidationMessageFor(model => model.AccountLogin, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field-group">
                            @Html.LabelFor(model => model.DateStart, htmlAttributes: new { })
                            @Html.EditorFor(model => model.DateStart, new { htmlAttributes = new { @class = "form-control" } })
                            <div>
                                @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field-group">
                            @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { })
                            @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control" } })
                            <div>
                                @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @if (ControllerAccessAttribute.GetAccessPage("Project", "StoryPointField"))
                        {
                            <div class="field-group">
                                @Html.LabelFor(model => model.StoryPoints, htmlAttributes: new { })
                                @Html.EditorFor(model => model.StoryPoints, new { htmlAttributes = new { @class = "form-control" } })
                                <div>
                                    @Html.ValidationMessageFor(model => model.StoryPoints, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        <div class="field-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { })
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control col-md-6", @style = "min-width: 100%", @rows = "12" })
                            <div>
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @if (ControllerAccessAttribute.GetAccessPage("Task", "IsPrivateField"))
                        {
                            <div class="field-group">
                                @Html.LabelFor(model => model.IsPrivate, htmlAttributes: new { })
                                @Html.CheckBox("IsPrivate", Model.IsPrivate)
                                <div>
                                    @Html.ValidationMessageFor(model => model.IsPrivate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        <div class="field-group">

                        </div>
                    </div>

                    <hr />

                    <div class="command-bar">
                        <div class="ops-cont">
                            <div class="ops-menus">
                                <ul id="opsbar-edit" class="first ops">
                                    <li class="last">
                                        <input type="submit" value="Сохранить" class="issueaction-edit-issue button edit first last" />
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/NicEdit/nicEditNew.js"></script>
<script src="~/Scripts/NicEdit/NicEditInitialization.js"></script>

<script type="text/javascript">
    if ($('#DateStart').val() == '0001-01-01') {
        $('#DateStart').val('');
    }
    if ($('#DateEnd').val() == '0001-01-01') {
        $('#DateEnd').val('');
    }
</script>