@model TaskTrackingSystem.Models.ProjectModel

@using TaskTrackingSystem.CustomAuthorizeAttribute;
@using System.Text;
@using System.Web.Mvc.Html
@{ControllerAccessAttribute.FillFromPage(Model.ProjectTypeId, Model.Id);}

@{
    ViewBag.Title = "Index";
}



<div class="alertHeader"></div>


<div class="item-header">
    <span class="link">@Html.ActionLink("Главная", "Index", "Home") /</span>
    <span class="link">@Html.ActionLink("Категория проектов", "Index", "ProjectType") /</span>
    <span class="link">@Html.ActionLink(Model.ProjectType.Name, "Details", "ProjectType", new { id = Model.ProjectTypeId }, new { })</span>
    <h2 class="link">@Html.ActionLink(Model.Name, "Index", "Project", new { id = Model.Id }, new { })</h2>

    <h4>@Html.ActionLink("Календарный план", "CalendarPlan", "Project", new { id = Model.Id }, new { })</h4>
    @if (ControllerAccessAttribute.GetAccessPage("AccountAccess", "ProjectAccess"))
    {
        <h4>@Html.ActionLink("Настройка доступа", "ProjectAccess", "AccountAccess", new { id = Model.Id }, new { })</h4>
    }

</div>

<div id="timeline"></div>

<div id="main-content" class="main-content">
    <div class="active-area">
        <div class="column full">
            <div class="content">
                <div class="command-bar">
                    <div class="ops-cont">
                        <div class="ops-menus">
                            <ul id="opsbar-edit" class="first ops">
                                <li class="last">
                                    <a class="issueaction-edit-issue button edit first last" href="~/ProjectType/Details/@Model.ProjectTypeId">
                                        <span>Назад</span>
                                    </a>
                                </li>
                                @if (ControllerAccessAttribute.GetAccessPage("Task", "Create"))
                                {
                                    <li class="last">
                                        @Html.ActionLink("Создать новый", "Create", "Task", new { projectId = Model.Id }, new { @class = "issueaction-edit-issue button edit first last" })
                                    </li>
                                }

                                @if (TaskTrackingSystem.Logic.Logic.Instance.AccountAccess.IsAdmin())
                                {
                                    <li class="last">
                                        @Html.ActionLink("Перенос в другую категорию", "ChangeProjectType", "Project", new { projectId = Model.Id }, new { @class = "issueaction-edit-issue button edit first last" })
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
                <hr />

                @if (Model.FilePaths.Count != 0)
                {
                    <div id="details-module" class="module toggle-wrap ops-cont">
                        <div class="mod-header">
                            <h3 class="toggle-title">Файлы/Папки</h3>
                        </div>
                        <div class="mod-content">
                            <div>
                                @foreach (var item in Model.FilePaths)
                                {
                                    <div class="row">
                                        <div></div>
                                        <div><a openpath href="myproto://@item.Path">@item.Description</a></div>
                                    </div>
                                }
                                <br />

                            </div>
                        </div>
                    </div>
                    <hr />
                }
                <div class="ops-cont">
                    <div class="points-block">
                        @if (Model.WithoutPoints != Model.AllPoints)
                        {
                            <div class="progress">
                                <div class="progress-bar bg-danger" role="progressbar" style="width: @Model.DonePersent.ToString("0.00", System.Globalization.CultureInfo.GetCultureInfo("en-US"))%" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100">@Convert.ToInt32(Model.DonePersent)%</div>
                                <div class="progress-bar bg-success" role="progressbar" style="width: @Model.InWorkPersent.ToString("0.00", System.Globalization.CultureInfo.GetCultureInfo("en-US"))% " aria-valuenow="45" aria-valuemin="0" aria-valuemax="100">@Convert.ToInt32(Model.InWorkPersent)%</div>
                                <div class="progress-bar bg-warning" role="progressbar" style="width: @Model.PostpondedPersent.ToString("0.00", System.Globalization.CultureInfo.GetCultureInfo("en-US"))%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100">@Convert.ToInt32(Model.PostpondedPersent)%</div>
                            </div>
                        }

                        @if (Model.WithoutPoints != 0)
                        {
                            <div style="float:right">
                                Задачи без оценки : @Model.WithoutPoints
                            </div>
                        }
                    </div>
                </div>

                <div class="ops-cont">
                    <table id="issuetable" class="hide-carrot sortable">
                        <thead>
                            <tr class="rowHeader">

                                <th class="colHeaderLink sortable headerrow-summary">
                                    <span title="Sort By Summary">@Html.DisplayNameFor(model => model.TaskList[0].Name)</span>
                                </th>

                                <th class="colHeaderLink sortable headerrow-assignee">
                                    <span title="Sort By Assignee">@Html.DisplayNameFor(model => model.TaskList[0].Account)</span>
                                </th>

                                <th class="colHeaderLink sortable headerrow-priority">
                                    <span title="Sort By Priority">@Html.DisplayNameFor(model => model.TaskList[0].DateStart)</span>
                                </th>

                                <th class="colHeaderLink sortable headerrow-status">
                                    <span title="Sort By Status">@Html.DisplayNameFor(model => model.TaskList[0].DateEnd)</span>
                                </th>

                                <th class="colHeaderLink sortable headerrow-resolution defaultsort">
                                    <span title="Sort By Resolution">@Html.DisplayNameFor(model => model.TaskList[0].StatusName)</span>
                                </th>

                                @if (ControllerAccessAttribute.GetAccessPage("Project", "StoryPointField"))
                                {
                                    <th class="colHeaderLink sortable headerrow-created">
                                        <span title="Sort By Created">@Html.DisplayNameFor(model => model.TaskList[0].StoryPoints)</span>
                                    </th>
                                }

                                <th class="colHeaderLink sortable headerrow-updated">
                                    <span title="Sort By Updated">@Html.DisplayNameFor(model => model.TaskList[0].Reporter)</span>
                                </th>
                                @if (ControllerAccessAttribute.GetAccessPage("Project", "ProjectResponsible"))
                                {
                                    <th>
                                        Действия
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.TaskList)
                            {
                                if (!item.IsPrivate || (item.IsPrivate && ControllerAccessAttribute.GetAccessPage("Task", "IsPrivateField")))
                                {
                                    <tr style="background: @item.RowColor;">
                                        <td>
                                            @Html.ActionLink(item.Name, "Details", "Task", new { id = item.Id }, new { })
                                        </td>
                                        <td>
                                            @Html.ActionLink(item.Account.Name, "Details", "Account", new { id = item.Account.Login }, new { })
                                        </td>
                                        <td sorttable_customkey="@TaskTrackingSystem.Models.ModelHelper.GetDateFormatForSorttable(item.DateStart)">
                                            @Html.DisplayFor(modelItem => item.DateStart)
                                        </td>
                                        <td sorttable_customkey="@TaskTrackingSystem.Models.ModelHelper.GetDateFormatForSorttable(item.DateEnd)">
                                            @Html.DisplayFor(modelItem => item.DateEnd)
                                        </td>
                                        <td sorttable_customkey="@TaskTrackingSystem.Models.ModelHelper.GetStatusKeyForSorttable(item.StatusId)">
                                            <span class="@item.GetColorForStatus">
                                                @Html.DisplayFor(modelItem => item.StatusName)
                                                @if (item.StatusId == TaskTrackingSystem.Shared.Entities.Status.DoneId && item.IsApproved)
                                                {
                                                    <svg width="12" height="12" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
                                                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
                                                    </svg>
                                                }
                                            </span>
                                        </td>
                                        <td>
                                            @if (ControllerAccessAttribute.GetAccessPage("Project", "StoryPointField"))
                                            {
                                                @item.StoryPoints
                                            }
                                        </td>
                                        <td>
                                            @if (item.Reporter != null && !string.IsNullOrEmpty(item.Reporter.Login))
                                            {
                                                @Html.ActionLink(item.Reporter.Name, "Details", "Account", new { id = item.Reporter.Login }, new { })
                                            }
                                        </td>
                                        @if (ControllerAccessAttribute.GetAccessPage("Project", "ProjectResponsible"))
                                        {
                                            <td>
                                                <a href="~/Task/Edit/@item.Id">
                                                    <button class="btn btn-default" type="button">
                                                        <img src="~/Content/img/edit.png" />
                                                    </button>
                                                </a>
                                                @using (Html.BeginForm("Delete", "Task", new { id = item.Id, projectId = Model.Id }, FormMethod.Post, new { onsubmit = "return confirm('Удалить " + @item.Name + "?');" }))
                                                {
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-default" onsubmit="return confirm('Удалить?')">
                                                        <img src="~/Content/img/empty-trash.png" />
                                                    </button>
                                                }
                                            </td>
                                        }
                                    </tr>
                                }
                            }

                            @*<tr id="issuerow51045" rel="51045" data-issuekey="AMBERLIGHT-97" class="issuerow              rowAlternate             ">
                                    <td class="nav issuetype"><a class="hidden-link" href="/browse/AMBERLIGHT-97" tabindex="-1" title="AMBERLIGHT-97"></a>     <a href="/browse/AMBERLIGHT-97"> <img src="/images/icons/improvement.gif" height="16" width="16" border="0" align="absmiddle" alt="Improvement" title="Improvement - An improvement or enhancement to an existing feature or task."></a></td>
                                    <td class="nav issuekey">

                                        <a href="/browse/AMBERLIGHT-97">AMBERLIGHT-97</a>
                                    </td>
                                    <td class="nav summary">
                                        <p>
                                            <a href="/browse/AMBERLIGHT-97">Инсталлятор для приложения</a>
                                        </p>
                                        <div class="ie7minWidth"></div>
                                    </td>
                                    <td class="nav assignee">
                                        <span class="tinylink">        <a class="user-hover" rel="solmir" id="assignee_solmir" href="/secure/ViewProfile.jspa?name=solmir">Andrey Meshalov</a></span>
                                    </td>
                                    <td class="nav reporter">
                                        <span class="tinylink">        <a class="user-hover" rel="solmir" id="reporter_solmir" href="/secure/ViewProfile.jspa?name=solmir">Andrey Meshalov</a></span>
                                    </td>
                                    <td class="nav priority">
                                        <img src="/images/icons/priority_blocker.gif" height="16" width="16" border="0" align="absmiddle" alt="Blocker" title="Blocker - Blocks development and/or testing work, production could not run.">
                                    </td>
                                    <td class="nav status">
                                        <img src="/images/icons/status_trash.gif" height="16" width="16" alt="Closed" title="Closed - The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">
                                        Closed
                                    </td>
                                    <td class="nav resolution">
                                        Fixed
                                    </td>
                                    <td class="nav created"> <span title="26.08.2019 13:26"><time datetime="2019-08-26T13:26+0700">26.08.2019</time></span> </td>
                                    <td class="nav updated"> <span title="29.08.2019 10:37"><time datetime="2019-08-29T10:37+0700">29.08.2019</time></span> </td>
                                    <td class="nav fixVersions">
                                        &nbsp;
                                    </td>
                                    <td class="nav duedate">
                                        &nbsp;
                                    </td>
                                    <td class="nav issue_actions">
                                        <div class="action-dropdown aui-dd-parent">
                                            <a class="aui-dropdown-trigger aui-dd-link icon-tools-small issue-actions-trigger" id="actions_51045" title="Actions" href="/rest/api/1.0/issues/51045/ActionsAndOperations?atl_token=BNLI-R5K9-IFD4-JY4Y|9659b429eeb8a3e2492168e22d4831c020addf73|lin">
                                                <span>
                                                    <em>Actions</em>
                                                </span>
                                            </a>
                                        </div>
                                    </td>
                                </tr>*@
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>




@{
    StringBuilder sb = new StringBuilder();

    foreach (var item in Model.TaskList)
    {
        //, end: '{item.DateEnd.ToString("yyyy-MM-dd")}'
        sb.AppendLine($@"{{ id: {item.Id}, content: '{item.Name}', start: '{item.DateEnd.ToString("yyyy-MM-dd")}' }},");
    }
}


<script src="~/Scripts/MyScripts/Sorttable/defaultsort.js"></script>
<script type="text/javascript" src="https://unpkg.com/vis-timeline/standalone/umd/vis-timeline-graph2d.min.js"></script>

<script type="text/javascript">
    // DOM element where the Timeline will be attached
    const container = document.getElementById("timeline");

    // Create a DataSet (allows two way data-binding)
    const items = new vis.DataSet([
        @Html.Raw(sb.ToString())
        //{ id: 1, content: "item 1", start: "2014-04-20" },
        //{ id: 2, content: "item 2", start: "2014-04-14" },
        //{ id: 3, content: "item 3", start: "2014-04-18" },
        //{ id: 4, content: "item 4", start: "2014-04-16", end: "2014-04-19" },
        //{ id: 5, content: "item 5", start: "2014-04-25" },
        //{ id: 6, content: "item 6", start: "2014-04-27" }
    ]);

    // Configuration for the Timeline
    const options = {
        start : '@DateTime.Now.AddDays(-15).ToString("yyyy-MM-dd")',
        end : '@DateTime.Now.AddDays(15).ToString("yyyy-MM-dd")',
        //zoomable: false,

    };

    // Create a Timeline
    const timeline = new vis.Timeline(container, items, options);
</script>



@*@if (Model.WithoutPoints != Model.AllPoints)
    {
        <div style="float:right;" class="col-4 col-offset-6">
            <div class="progress">
                <div class="progress-bar bg-danger" role="progressbar" style="width: @Model.DonePersent.ToString("0.00", System.Globalization.CultureInfo.GetCultureInfo("en-US"))%" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100">@Convert.ToInt32(Model.DonePersent)%</div>
                <div class="progress-bar bg-success" role="progressbar" style="width: @Model.InWorkPersent.ToString("0.00", System.Globalization.CultureInfo.GetCultureInfo("en-US"))% " aria-valuenow="45" aria-valuemin="0" aria-valuemax="100">@Convert.ToInt32(Model.InWorkPersent)%</div>
                <div class="progress-bar bg-warning" role="progressbar" style="width: @Model.PostpondedPersent.ToString("0.00", System.Globalization.CultureInfo.GetCultureInfo("en-US"))%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100">@Convert.ToInt32(Model.PostpondedPersent)%</div>
            </div>
        </div>
    }
    @if (Model.WithoutPoints != 0)
    {
        <div style="float:right">
            Задачи без оценки : @Model.WithoutPoints
        </div>
    }

    @if (Model.TaskList.Count() != 0)
    {
        <table class="table sortable table-hover">
            <tr class="active">
                <th class="col-xs-2">
                    @Html.DisplayNameFor(model => model.TaskList[0].Name)
                </th>
                <th class="col-xs-2">
                    @Html.DisplayNameFor(model => model.TaskList[0].Account)
                </th>
                <th class="col-xs-2">
                    @Html.DisplayNameFor(model => model.TaskList[0].DateStart)
                </th>
                <th class="col-xs-2">
                    @Html.DisplayNameFor(model => model.TaskList[0].DateEnd)
                </th>
                <th class="col-xs-1 sorttable_nosort">
                    @Html.DisplayNameFor(model => model.TaskList[0].StatusName)
                </th>

                <th class="col-xs-1">
                    @if (ControllerAccessAttribute.GetAccessPage("Project", "StoryPointField"))
                    {
                        @Html.DisplayNameFor(model => model.TaskList[0].StoryPoints)
                    }
                </th>

                <th class="col-xs-2">
                    @Html.DisplayNameFor(model => model.TaskList[0].Reporter)
                </th>

                <th class="col-xs-1 sorttable_nosort" />
            </tr>
            @foreach (var item in Model.TaskList)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.Name, "Details", "Task", new { id = item.Id }, new { })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Account.Name)
                    </td>
                    <td sorttable_customkey="@TaskTrackingSystem.Models.ModelHelper.GetDateFormatForSorttable(item.DateStart)">
                        @Html.DisplayFor(modelItem => item.DateStart)
                    </td>
                    <td sorttable_customkey="@TaskTrackingSystem.Models.ModelHelper.GetDateFormatForSorttable(item.DateEnd)">
                        @Html.DisplayFor(modelItem => item.DateEnd)
                    </td>
                    <td>
                        <span class="@item.GetColorForStatus">
                            @Html.DisplayFor(modelItem => item.StatusName)
                        </span>
                    </td>

                    <td>
                        @if (ControllerAccessAttribute.GetAccessPage("Project", "StoryPointField"))
                        {
                            @item.StoryPoints
                        }
                    </td>

                    <td class="col-xs-1">
                        @if (item.Reporter != null && !string.IsNullOrEmpty(item.Reporter.Login))
                        {
                            @Html.ActionLink(item.Reporter.Name, "Details", "Account", new { id = item.Reporter.Login }, new { })
                        }
                    </td>

                    <td>
                        @if (ControllerAccessAttribute.GetAccessPage("Project", "ProjectResponsible"))
                        {
                            using (Html.BeginForm("Delete", "Task", new { id = item.Id, projectId = Model.Id }, FormMethod.Post, new { onsubmit = "return confirm('Удалить " + @item.Name + "?');" }))
                            {
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-default btn-sm" onsubmit="return confirm('Удалить?')">
                                    <span class="glyphicon glyphicon-trash"></span>
                                </button>
                            }
                        }
                    </td>
                </tr>
            }

        </table>
    }


    <div>
        @if (ControllerAccessAttribute.GetAccessPage("Project", "ChengeHistoryProject"))
        {
            <h3>История изменений :</h3>

            foreach (var log in Model.Logs)
            {
                <div class="container">
                    <div class="row">
                        <div class="col">
                            Обновил : @Html.ActionLink(log.UserName, "Details", "Account", new { id = log.UserLogin }, new { })
                        </div>
                        <div class="col">
                            @log.TimeOfChange
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            Поле :
                        </div>
                        <div class="col">
                            @log.FieldName
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <b>Старое значение :</b>
                        </div>
                        <div class="col">
                            <b>Новое значение :</b>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            @log.ChangedValue
                        </div>
                        <div class="col">
                            @log.NewValue
                        </div>
                    </div>
                </div>
                <hr />
            }
        }
    </div>*@