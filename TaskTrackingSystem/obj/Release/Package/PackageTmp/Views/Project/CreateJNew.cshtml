@model TaskTrackingSystem.Models.ProjectModel

@using TaskTrackingSystem.CustomAuthorizeAttribute;
@{ControllerAccessAttribute.FillFromPage(Convert.ToInt32(ViewData["projectTypeId"]));}

@{
    /**/

    ViewBag.Title = "Create";
}


<div class="alertHeader"></div>

<div class="item-header">
    <h2>Создание новой проекта для : @ViewData["projectTypeName"]</h2>
</div>

<div id="main-content" class="main-content">
    <div class="active-area">
        <div class="column full">
            <div class="content">
                <div class="command-bar">
                    <div class="ops-cont">
                        <div class="ops-menus">
                            <ul id="opsbar-edit" class="first ops">
                                <li class="last">
                                    <a class="issueaction-edit-issue button edit first last" href='~/ProjectType/Details/@Request.Params["projectTypeId"]'>
                                        <span>Назад</span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

                <hr />

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.Hidden("projectTypeId", Model.ProjectTypeId)

                    <div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="field-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            <div>
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field-group">
                            @Html.LabelFor(model => model.StatusId, htmlAttributes: new { })
                            @Html.DropDownListFor(model => model.StatusId, Model.DropDownListStatuses, new { @class = "form-control" })
                        </div>

                        @if (TaskTrackingSystem.Logic.Logic.Instance.AccountAccess.IsAdminOrBuh())
                        {
                            <div class="field-group">
                                @Html.LabelFor(model => model.ContractStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div>
                                    @Html.DropDownListFor(model => model.ContractStatus, Model.DropDownListContractStatuses, new { @class = "form-control" })
                                </div>
                            </div>
                        }

                        <div class="field-group">
                            @Html.LabelFor(model => model.AccountLogin, htmlAttributes: new { })
                            @Html.DropDownListFor(model => model.AccountLogin, Model.DropDownListAccounts, new { @class = "form-control" })
                            <div>
                                @Html.ValidationMessageFor(model => model.AccountLogin, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field-group">
                            @Html.LabelFor(model => model.DateStart, htmlAttributes: new { })
                            @Html.EditorFor(model => model.DateStart, new { htmlAttributes = new { @class = "form-control" } })
                            <div>
                                @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field-group">
                            @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { })
                            @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control" } })
                            <div>
                                @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="field-group">
                            @Html.LabelFor(model => model.ContractNumber, htmlAttributes: new { })
                            @Html.EditorFor(model => model.ContractNumber, new { htmlAttributes = new { @class = "form-control" } })
                            <div>
                                @Html.ValidationMessageFor(model => model.ContractNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.Hidden("CompanyId", Model.CompanyId)

                        <div class="field-group">
                            @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { })
                            <div>
                                <input id="CompaniesInput" type="text" list="CompaniesDL" autocomplete="off" class="input-validation-error form-control text-box single-line">
                                <datalist id="CompaniesDL">
                                    @foreach (var company in Model.Companies)
                                    {
                                        <option id="@company.Id" value="@company.Name" />
                                    }
                                </datalist>
                                <div>
                                    @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        @if (ControllerAccessAttribute.GetAccessPage("Project", "CostField"))
                        {
                            <div class="field-group">
                                @Html.LabelFor(model => model.Cost, htmlAttributes: new { })
                                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                                <div>
                                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="field-group">
                                @Html.LabelFor(model => model.Paid, htmlAttributes: new { })
                                @Html.EditorFor(model => model.Paid, new { htmlAttributes = new { @class = "form-control" } })
                                <div>
                                    @Html.ValidationMessageFor(model => model.Paid, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                    </div>

                    <hr />

                    <div class="command-bar">
                        <div class="ops-cont">
                            <div class="ops-menus">
                                <ul id="opsbar-edit" class="first ops">
                                    <li class="last">
                                        <input type="submit" value="Создать" class="issueaction-edit-issue button edit first last" />
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script type="text/javascript">
    if ($('#DateStart').val() == '0001-01-01') {
        $('#DateStart').val('');
    }
    if ($('#DateEnd').val() == '0001-01-01') {
        $('#DateEnd').val('');
    }

    $(document).ready(function () {

        //Евент : записываем в скрытое поле CompanyId значение выбранное в CompaniesInput списке
        $("#CompaniesInput").focusout(function () {
            g = $('#CompaniesInput').val();
            id = $('#CompaniesDL').find('option[value="' + g + '"]').attr('id');
            $("#CompanyId").val(id);
        });

        //Заполняем предвыбранное значение в CompaniesInput списке
        $('#CompaniesInput').val($('#CompaniesDL').find('option[id="' + $("#CompanyId").val() + '"]').attr('value'));
    });
</script>