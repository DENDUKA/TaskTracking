@model TaskTrackingSystem.Models.ProjectModel

@using TaskTrackingSystem.CustomAuthorizeAttribute;
@{ControllerAccessAttribute.FillFromPage(Model.ProjectTypeId, Model.Id);}

@{
    ViewBag.Title = "Index";
}

<h2>@Model.Name</h2>

<div style="float:left" class="col-8">
    <p>
        @Html.ActionLink("Главная", "Index", "Home") /
        @Html.ActionLink("Категория проектов", "Index", "ProjectType") /
        @Html.ActionLink(Model.ProjectType.Name, "Details", "ProjectType", new { id = Model.ProjectTypeId }, new { }) /
        @Model.Name
    </p>
    <p>
        @Html.ActionLink("Календарный план", "CalendarPlan", "Project", new { id = Model.Id }, new { })
    </p>

    @if (ControllerAccessAttribute.GetAccessPage("AccountAccess", "ProjectAccess"))
    {
        @Html.ActionLink("Настройка доступа", "ProjectAccess", "AccountAccess", new { id = Model.Id }, new { })
    }

    @if (Model.FilePaths.Count != 0)
    {
        <h4>Файлы/Папки :</h4>
        foreach (var item in Model.FilePaths)
        {
            <div class="row">
                <div class="col-1"></div>
                <div class="col-4"><a openpath href="myproto://@item.Path">@item.Description</a></div>
            </div>
        }
        <br />
    }

    @if (ControllerAccessAttribute.GetAccessPage("Task", "Create"))
    {
        <p>
            @Html.ActionLink("Создать новый", "Create", "Task", new { projectId = Model.Id }, new { })
        </p>
    }
</div>



@if (Model.WithoutPoints != Model.AllPoints)
{
    <div style="float:right;" class="col-4 col-offset-6">
        <div class="progress">
            <div class="progress-bar bg-danger" role="progressbar" style="width: @Model.DonePersent.ToString("0.00", System.Globalization.CultureInfo.GetCultureInfo("en-US"))%" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100">@Convert.ToInt32(Model.DonePersent)%</div>
            <div class="progress-bar bg-success" role="progressbar" style="width: @Model.InWorkPersent.ToString("0.00", System.Globalization.CultureInfo.GetCultureInfo("en-US"))% " aria-valuenow="45" aria-valuemin="0" aria-valuemax="100">@Convert.ToInt32(Model.InWorkPersent)%</div>
            <div class="progress-bar bg-warning" role="progressbar" style="width: @Model.PostpondedPersent.ToString("0.00", System.Globalization.CultureInfo.GetCultureInfo("en-US"))%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100">@Convert.ToInt32(Model.PostpondedPersent)%</div>
        </div>
    </div>
}
@if (Model.WithoutPoints != 0)
{
    <div style="float:right">
        Задачи без оценки : @Model.WithoutPoints
    </div>
}

@if (Model.TaskList.Count() != 0)
{
    <table class="table sortable table-hover">
        <tr class="active">
            <th class="col-xs-2">
                @Html.DisplayNameFor(model => model.TaskList[0].Name)
            </th>
            <th class="col-xs-2">
                @Html.DisplayNameFor(model => model.TaskList[0].Account)
            </th>
            <th class="col-xs-2">
                @Html.DisplayNameFor(model => model.TaskList[0].DateStart)
            </th>
            <th class="col-xs-2">
                @Html.DisplayNameFor(model => model.TaskList[0].DateEnd)
            </th>
            <th class="col-xs-1 sorttable_nosort">
                @Html.DisplayNameFor(model => model.TaskList[0].StatusName)
            </th>

            <th class="col-xs-1">
                @if (ControllerAccessAttribute.GetAccessPage("Project", "StoryPointField"))
                {
                    @Html.DisplayNameFor(model => model.TaskList[0].StoryPoints)
                }
            </th>

            <th class="col-xs-2">
                @Html.DisplayNameFor(model => model.TaskList[0].Reporter)
            </th>

            <th class="col-xs-1 sorttable_nosort" />
        </tr>
        @foreach (var item in Model.TaskList)
        {
            <tr>
                <td>
                    @Html.ActionLink(item.Name, "Details", "Task", new { id = item.Id }, new { })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Account.Name)
                </td>
                <td sorttable_customkey="@TaskTrackingSystem.Models.ModelHelper.GetDateFormatForSorttable(item.DateStart)">
                    @Html.DisplayFor(modelItem => item.DateStart)
                </td>
                <td sorttable_customkey="@TaskTrackingSystem.Models.ModelHelper.GetDateFormatForSorttable(item.DateEnd)">
                    @Html.DisplayFor(modelItem => item.DateEnd)
                </td>
                <td>
                    <span class="@item.GetColorForStatus">
                        @Html.DisplayFor(modelItem => item.StatusName)
                    </span>
                </td>

                <td>
                    @if (ControllerAccessAttribute.GetAccessPage("Project", "StoryPointField"))
                    {
                        @item.StoryPoints
                    }
                </td>

                <td class="col-xs-1">
                    @if (item.Reporter != null && !string.IsNullOrEmpty(item.Reporter.Login))
                    {
                        @Html.ActionLink(item.Reporter.Name, "Details", "Account", new { id = item.Reporter.Login }, new { })
                    }
                </td>

                <td>
                    @if (ControllerAccessAttribute.GetAccessPage("Project", "ProjectResponsible"))
                    {
                        using (Html.BeginForm("Delete", "Task", new { id = item.Id, projectId = Model.Id }, FormMethod.Post, new { onsubmit = "return confirm('Удалить " + @item.Name + "?');" }))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-default btn-sm" onsubmit="return confirm('Удалить?')">
                                <span class="glyphicon glyphicon-trash"></span>
                            </button>
                        }
                    }
                </td>
            </tr>
        }

    </table>
}


    <div>
        @if (ControllerAccessAttribute.GetAccessPage("Project", "ChengeHistoryProject"))
        {
            <h3>История изменений :</h3>

            foreach (var log in Model.Logs)
            {
                <div class="container">
                    <div class="row">
                        <div class="col">
                            Обновил : @Html.ActionLink(log.UserName, "Details", "Account", new { id = log.UserLogin }, new { })
                        </div>
                        <div class="col">
                            @log.TimeOfChange
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            Поле :
                        </div>
                        <div class="col">
                            @log.FieldName
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <b>Старое значение :</b>
                        </div>
                        <div class="col">
                            <b>Новое значение :</b>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            @log.ChangedValue
                        </div>
                        <div class="col">
                            @log.NewValue
                        </div>
                    </div>
                </div>
                <hr />
            }
        }
    </div>